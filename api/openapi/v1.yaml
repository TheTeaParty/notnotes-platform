openapi: 3.0.1
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
servers:
  - url: 'https://api.example.com'
paths:
  /tags:
    get:
      summary: Get Tags
      operationId: getTags
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
        default:
          $ref: '#/components/responses/ServerError'
  /notes/{noteID}:
    parameters:
      - name: noteID
        in: path
        required: true
        schema:
          type: string
    put:
      summary: Update Note
      operationId: updateNote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateNote'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete Note
      operationId: deleteNote
      responses:
        204:
          description: Deleted Note
        404:
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/ServerError'
    get:
      summary: Get Note
      operationId: getNote
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        404:
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/ServerError'
  /notes:
    post:
      summary: Create Note
      operationId: createNote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateNote'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        400:
          $ref: '#/components/responses/BadRequest'
        default:
          $ref: '#/components/responses/ServerError'
    get:
      summary: Get Nots
      operationId: getNotes
      parameters:
        - name: tags
          in: query
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        default:
          $ref: '#/components/responses/ServerError'
components:
  responses:
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      required:
        - message
        - data
      properties:
        message:
          type: string
        data:
          type: object
    CreateOrUpdateNote:
      type: object
      required:
        - name
        - content
      properties:
        name:
          type: string
        content:
          type: string
    Tag:
      type: object
      required:
        - id
        - name
        - created_at
      properties:
        id:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: 'date-time'
    Note:
      type: object
      required:
        - id
        - name
        - content
        - created_at
        - updated_at
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        content:
          type: string
        created_at:
          type: string
          format: 'date-time'
          readOnly: true
        updated_at:
          type: string
          format: 'date-time'
          readOnly: true

